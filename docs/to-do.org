* verify amplicon correctly aligns with BLAT or minimap2
* deal better with pairing of transcripts with primers, etc.
started etc/targetBed.as, but decided to just add pairing in amplicons for now
* targeted transcript BED could have amplicon annotated
not targeted region, however this would require on sequence per primer pair
* strip ids of white space in input
* stable ids or history tracking
* design_primers.py PrimerDesign
maybe this shouldn't have assumptions about a single transcript??
PrimerDesigns does have the transcript, but the primer3 info
is in 
    
* Document multiple transcript with same amplicon, add new sets.
* PRIMER_LEFT_END_STABILITY is different than we though:
** IDT's does it per potential dimer
** primer3: f is the delta G of disruption of the five 3' bases of the primer.
* tools for dimer prediction
** http://biotools.nubic.northwestern.edu/OligoCalc.html
http://biotools.nubic.northwestern.edu/OligoCalcSource3.19.zip
* save away BEDs from test cases for future tests without relying on entire bigBed
* ability to control splice junction overlap, then try with less stringency
PRIMER_MIN_3_PRIME_OVERLAP_OF_JUNCTION
PRIMER_MIN_5_PRIME_OVERLAP_OF_JUNCTION
for now, default to 8
* ugly location formating
caused by: specified primer region, after adjusted for exon bounds chr17:49970352-49970466 for transcript (non_redundant_NNC/ENST00000705765) must contain either one exon, or two exons and an intron: [IntronFeature(genome=Coords(name='chr17', start=49970352, end=49970466, strand='+', size=83257441), trans=Coords(name='ENST00000705765', start=1164, end=1164, strand='+', size=2759))]

* Region is too small, need a better error message
>>> Designing C19orf81+1
Error: PRIMER_MAX_SIZE > min PRIMER_PRODUCT_SIZE_RANGE
WTC11_consolidated	chr19:50658491-50658506	chr19:50658963-50659037	NNC_64139	C19orf81	C19orf81+1		
# region too small
'PRIMER_MIN_SIZE': 18,
    'PRIMER_MAX_SIZE': 22,
    'PRIMER_EXPLAIN_FLAG': 1,
    'PRIMER_PRODUCT_SIZE_RANGE': [[19, 110]]}


* additional transcripts:
** output amplicons for additional transcripts
** output a list of additional transcript that will be amplified.
I would add length of those transcripts. That would provide size estimations that you expect to have in your gel
amplicon length I would say
** clearly explain what additonal transcripts does.

** very unhelpful:
Error: target IL1B+7 failed
caused by: specified primer region, after adjusted for exon bounds contig_14815_pilon:23250-23316 does not overlap transcript (manatee_consolidated, NIC-118574)

** instead of stopping, can flag with error in spreed sheet and have tracks to
help debug

* invalid feature bounds message is hard to read
caused by: specified primer region, after adjusted for exon bounds contig_18545_pilon:304550-304734 for transcript
(manatee_consolidated, NNC-298417) must contain either one exon, or two exons and an intron:
 [IntronFeature(genome=Coords(name='contig_18545_pilon', start=304550, end=304734, strand='+', size=353458),
                              trans=Coords(name='NNC-298417', start=2697, end=2697, strand='+', size=3955))]

* bad primers BEDs
** CCDC106+1 - outside of target
** DPP3+1 - doesn't cross intro.
* CERNA1+1 - some of isPCr showed going into retained intron
* Ordered primers by  score
* rna annotates doesn't work right
* renamed ppair_id
* delete empty columns in spec
* primer_design -> design_pairs
* rename to indicated if they are features_5p, features_3p are genome or transcriptome order
* created primers that went beyond 3' end of region.  This maybe something primer3 does
see test_design_primers_guts.py test_FBXL16(request, genome_data, wtc11_targets_specs_set1):
* include seq_args and global_args in Primer3Results and dump from there,
primer3_dump_args should not have to recalculate
* bounds() name not so clear
* '+' is a bit of a confusing name separator, maybe CCDC106_1_pp1

* if slop on ends of specified range extends too far into intron
get confusing error message:

caused by: specified primer region contig_18545_pilon:308302-309177 for transcript (manatee_consolidated, NNC-298416) must contain either one exon, or two exons and an intron: [IntronFeature(genome=Coords(name='contig_18545_pilon', start=308302, end=308460, strand='+', size=353458), trans=Coords(name='NNC-298416', start=6264, end=6264, strand='+', size=7336))
 ExonFeature(genome=Coords(name='contig_18545_pilon', start=308460, end=309177, strand='+', size=353458), trans=Coords(name='NNC-298416', start=6264, end=6981, strand='+', size=7336))]
* allow for larger slop
** trimming into exons was not implemented, despite comment:
def _build_target_transcript(genome_data, primer_target_spec, trans_spec):
    "build transcript with initial regions trimmed to exons"




    
